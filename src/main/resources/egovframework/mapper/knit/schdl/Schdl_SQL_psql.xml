<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="schdlDAO">

	<!-- 일정관리 맵 -->
	<resultMap id="mapSchdl" type="SchdlVO">
		<id property="schdlId" column="SCHDL_ID"/>						<!-- 일정관리 ID(휴가ID, 출장ID) -->
		<result property="typeCd" column="TYPE_CD"/>					<!-- 일정관리 유형(vcatn, bsrp) -->
		<result property="typeNm" column="TYPE_NM"/>					<!-- 일정관리 유형명(휴가, 출장) -->
		<result property="aplcntId" column="APLCNT_ID"/>				<!-- 일정관리 신청자 -->
		<result property="aplcntNm" column="APLCNT_NM"/>				<!-- 일정관리 신청자명 -->
		<result property="content" column="CONTENT"/>					<!-- 일정관리 신청 내용 -->
		<result property="startDt" column="START_DT"/>					<!-- 일정관리 신청 시작일자 -->
		<result property="endDt" column="END_DT"/>						<!-- 일정관리 신청 종료일자 -->
		<result property="rgtrId" column="RGTR_ID"/>					<!-- 일정관리 등록자ID -->
		<result property="regDt" column="REG_DT"/>						<!-- 일정관리 등록일자 -->
		<result property="mdfrId" column="MDFR_ID"/>					<!-- 일정관리 수정자ID -->
		<result property="mdfcnDt" column="MDFCN_DT"/>					<!-- 일정관리 수정일자 -->
		<result property="bsrpTtl" column="BSRP_TTL"/>					<!-- 일정관리 출장 - 출장제목 -->
		<result property="bsrpPlaceNm" column="BSRP_PLACE_NM"/> 		<!-- 일정관리 출장 - 출장장소명 -->
		<result property="vcatnSe" column="VCATN_SE"/>					<!-- 일정관리 휴가 - 휴가구분 -->
		<result property="vcatnSeNm" column="VCATN_SE_NM"/>				<!-- 일정관리 휴가 - 휴가구분명 -->
		<result property="dayCnt" column="DAY_CNT"/>					<!-- 일정관리 신청 기간 일수 -->
		<result property="deptId" column="DEPT_ID"/>					<!-- 일정관리 신청자 부서 ID -->
		<result property="deptNm" column="DEPT_NM"/>					<!-- 일정관리 신청자 부서명 -->
		<result property="ofcpsId" column="OFCPS_ID"/>					<!-- 일정관리 신청자 직위 ID -->
		<result property="ofcpsNm" column="OFCPS_NM"/>					<!-- 일정관리 신청자 직위명 -->
		<result property="rmndrDayCnt" column="RMNDR_DAY_CNT"/>			<!-- 일정관리 휴가 - 신청자의 휴가 남은 일수 -->
		<collection property="bsrpCncdntList" ofType="BsrpCncdntVO">	<!-- 일정관리 출장 - 등승자 정보 리스트 -->
			<id property="bsrpCncdntId" column="BSRP_CNCDNT_ID"/>		<!-- 일정관리 출장 - 등승자 정보 ID -->
			<result property="tgrpnId" column="TGRPN_ID"/>				<!-- 일정관리 출장 - 등승자 ID -->
			<result property="tgrpnNm" column="TGRPN_NM"/>				<!-- 일정관리 출장 - 등승자 명 -->
			<result property="tgrpnDeptId" column="TGRPN_DEPT_ID"/>		<!-- 일정관리 출장 - 등승자 부서 ID -->
			<result property="tgrpnDeptNm" column="TGRPN_DEPT_NM"/> 	<!-- 일정관리 출장 - 등승자 부서 명 -->
			<result property="tgrpnOfcpsId" column="TGRPN_OFCPS_ID"/>	<!-- 일정관리 출장 - 등승자 직위 ID -->
			<result property="tgrpnOfcpsNm" column="TGRPN_OFCPS_NM"/>	<!-- 일정관리 출장 - 등승자 직위명 -->
		</collection>
	</resultMap>

	<!-- 부서관리 맵 -->
	<resultMap id="mapDept" type="DeptVO">
		<id property="deptId" column="DEPT_ID"/>						<!-- 부서 ID -->
		<result property="deptNm" column="DEPT_NM"/>					<!-- 부서 명 -->
		<result property="upDeptId" column="UP_DEPT_ID"/>				<!-- 상위 부서 ID -->
		<result property="deptSn" column="DEPT_SN"/>					<!-- 부서 순서 -->
		<result property="useYn" column="USE_YN"/>						<!-- 부서 사용여부 -->
		<result property="droppable" column="DROPPABLE"/>				<!-- 하위 부서 갯수 -->
		<result property="rmndrDayCnt" column="RMNDR_DAY_CNT"/>			<!-- 직원 휴가 남은 일수 -->
	</resultMap>

	<!-- 일정관리 목록 조회 -->
	<select id="selectSchdlList" parameterType="SchdlVO" resultMap="mapSchdl">
		SELECT TYPE_CD
			 , TYPE_NM
			 , SCHDL_ID
			 , APLCNT_ID
			 , CONTENT
			 , START_DT
			 , END_DT
			 , REG_DT
			 , RGTR_ID
			 , MDFCN_DT
			 , MDFR_ID
			 , BSRP_TTL
			 , BSRP_PLACE_NM
			 , VCATN_SE
			 , VCATN_SE_NM
			 , APLCNT_NM
			 , DEPT_ID
			 , OFCPS_ID
			 , OFCPS_NM
			 , DEPT_NM
			 , DAY_CNT
			 , BSRP_CNCDNT_ID
		  	 , TGRPN_ID
		  	 , TGRPN_NM
		  	 , TGRPN_DEPT_ID
		  	 , TGRPN_DEPT_NM
		  	 , TGRPN_OFCPS_ID
			 , TGRPN_OFCPS_NM
			 , RMNDR_DAY_CNT
		  FROM (
		  		SELECT MBER_SCHDL.TYPE_CD
					 , MBER_SCHDL.TYPE_NM
					 , MBER_SCHDL.SCHDL_ID
					 , MBER_SCHDL.APLCNT_ID
					 , MBER_SCHDL.CONTENT
					 , MBER_SCHDL.START_DT
					 , MBER_SCHDL.END_DT
					 , MBER_SCHDL.REG_DT
					 , MBER_SCHDL.RGTR_ID
					 , MBER_SCHDL.MDFCN_DT
					 , MBER_SCHDL.MDFR_ID
					 , MBER_SCHDL.BSRP_TTL
					 , MBER_SCHDL.BSRP_PLACE_NM
					 , MBER_SCHDL.VCATN_SE
					 , MBER_SCHDL.VCATN_SE_NM
					 , MBER_SCHDL.APLCNT_NM
					 , MBER_SCHDL.DEPT_ID
					 , MBER_SCHDL.OFCPS_ID
					 , MBER_SCHDL.OFCPS_NM
					 , COALESCE(B.DEPT_NM, '부서미지정') AS DEPT_NM
					 , TO_DATE(MBER_SCHDL.END_DT, 'YYYYMMDDHH24MISS') - TO_DATE(MBER_SCHDL.START_DT, 'YYYYMMDDHH24MISS') + 1 AS DAY_CNT
					 , C.BSRP_CNCDNT_ID
				  	 , C.TGRPN_ID
				  	 , C.TGRPN_NM
				  	 , C.TGRPN_DEPT_ID
				  	 , C.TGRPN_DEPT_NM
				  	 , C.TGRPN_OFCPS_ID
					 , C.TGRPN_OFCPS_NM
					 , D.RMNDR_DAY_CNT
				  FROM (
				  			SELECT UNIT.TYPE_CD
								 , UNIT.TYPE_NM
								 , UNIT.SCHDL_ID
								 , UNIT.APLCNT_ID
								 , UNIT.CONTENT
								 , UNIT.START_DT
								 , UNIT.END_DT
								 , UNIT.REG_DT
								 , UNIT.RGTR_ID
								 , UNIT.MDFCN_DT
								 , UNIT.MDFR_ID
								 , UNIT.BSRP_TTL
								 , UNIT.BSRP_PLACE_NM
								 , UNIT.VCATN_SE
								 , FNCCOMCODENM(UNIT.VCATN_SE, 'COM056') AS VCATN_SE_NM
								 , MBER.USER_NM AS APLCNT_NM
								 , MBER.DEPT_ID
								 , MBER.OFCPS_ID
								 , FNCCOMCODENM(MBER.OFCPS_ID, 'COM105') AS OFCPS_NM
				  			  FROM (
				  			  			SELECT 'bsrp' AS TYPE_CD
											 , '출장' AS TYPE_NM
											 , BSRP_ID AS SCHDL_ID
											 , APLCNT_ID
											 , BSRP_CN AS CONTENT
											 , BGNG_DT AS START_DT
											 , END_DT AS END_DT
											 , REG_DT
											 , RGTR_ID
											 , MDFCN_DT
											 , MDFR_ID
											 , BSRP_TTL
											 , BSRP_PLACE_NM
											 , NULL AS VCATN_SE
										  FROM TN_SCHDL_BSRP
										 WHERE 1=1
										 UNION ALL
										SELECT 'vcatn' AS TYPE_CD
											 , '휴가' AS TYPE_NM
											 , VCATN_ID AS SCHDL_ID
											 , APLCNT_ID
											 , VCATN_CN AS CONTENT
											 , BGNG_YMD AS START_DT
											 , END_YMD AS END_DT
											 , REG_DT
											 , RGTR_ID
											 , MDFCN_DT
											 , MDFR_ID
											 , NULL AS BSRP_TTL
											 , NULL AS BSRP_PLACE_NM
											 , VCATN_SE
										  FROM TN_SCHDL_VCATN
										 WHERE 1=1
										 <if test="viewCd != null and viewCd == 'calendar'">
										 	UNION ALL
										   SELECT 'brdt' AS TYPE_CD
											 	, '생일' AS TYPE_NM
											 	, USER_ID AS SCHDL_ID
											 	, ESNTL_ID AS APLCNT_ID
											 	, '생일' AS CONTENT
											 	, CASE WHEN BRDT IS NULL
											 		   THEN NULL
													   WHEN SUBSTRING(BRDT,5,8) = '0229' AND ((CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 4 != 0 OR CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 100 = 0)) AND CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 400 != 0
													   THEN NULL
													   ELSE CONCAT(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY'), SUBSTRING(BRDT,5,8))
												  END AS START_DT
											    , CASE WHEN BRDT IS NULL
											 		   THEN NULL
													   WHEN SUBSTRING(BRDT,5,8) = '0229' AND ((CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 4 != 0 OR CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 100 = 0)) AND CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 400 != 0
													   THEN NULL
													   ELSE CONCAT(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY'), SUBSTRING(BRDT,5,8))
												  END AS END_DT
											    , NULL AS REG_DT
												, NULL AS RGTR_ID
												, NULL AS MDFCN_DT
												, NULL AS MDFR_ID
												, NULL AS BSRP_TTL
												, NULL AS BSRP_PLACE_NM
												, NULL AS VCATN_SE
										 	 FROM COMVNUSERMASTER
											WHERE 1=1
										 </if>
				  			  ) UNIT
							  	   INNER JOIN COMVNUSERMASTER MBER
									  ON UNIT.APLCNT_ID = MBER.ESNTL_ID
							 WHERE 1=1
							<if test="typeCd != null and typeCd != ''">
								AND UNIT.TYPE_CD = #{typeCd}
							</if>
							<if test="deptId != null and deptId != ''">
								AND MBER.DEPT_ID = #{deptId}
							</if>
							<if test="aplcntNm != null and aplcntNm != ''">
								AND REPLACE(MBER.USER_NM, ' ', '') LIKE CONCAT('%', REPLACE(#{aplcntNm}, ' ', ''), '%')
							</if>
							<if test="startDt != null and startDt != '' and (endDt == null or endDt == '')">
								<![CDATA[
									AND TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS') <= TO_DATE(UNIT.START_DT, 'YYYYMMDDHH24MISS')
								]]>
							</if>
							<if test="(startDt == null or startDt == '') and endDt != null and endDt != ''">
								<![CDATA[
									AND TO_DATE(#{endDt}, 'YYYYMMDDHH24MISS') >= TO_DATE(UNIT.END_DT, 'YYYYMMDDHH24MISS')
								]]>
							</if>
							<if test="startDt != null and startDt != '' and endDt != null and endDt != ''">
								AND (
										(
											TO_DATE(UNIT.START_DT, 'YYYYMMDDHH24MISS') BETWEEN TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS') AND TO_DATE(#{endDt}, 'YYYYMMDDHH24MISS')
											OR
											TO_DATE(UNIT.END_DT, 'YYYYMMDDHH24MISS') BETWEEN TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS') AND TO_DATE(#{endDt}, 'YYYYMMDDHH24MISS')
										) OR (
											TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS') BETWEEN TO_DATE(UNIT.START_DT, 'YYYYMMDDHH24MISS') AND TO_DATE(UNIT.END_DT, 'YYYYMMDDHH24MISS')
											OR
											TO_DATE(#{endDt}, 'YYYYMMDDHH24MISS') BETWEEN TO_DATE(UNIT.START_DT, 'YYYYMMDDHH24MISS') AND TO_DATE(UNIT.END_DT, 'YYYYMMDDHH24MISS')
										)
								)
							</if>
							<if test="viewCd != null and viewCd == 'list'">
								 ORDER BY TO_TIMESTAMP(UNIT.START_DT, 'YYYYMMDDHH24MISS') DESC, MBER.OFCPS_ID ASC, MBER.USER_NM ASC
								 LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
							</if>
				  ) MBER_SCHDL
				  	   LEFT JOIN TN_CMMN_DEPT B
				      	 ON MBER_SCHDL.DEPT_ID = B.DEPT_ID
				       LEFT JOIN (
				  	    	SELECT CNCDNT.BSRP_CNCDNT_ID
				  	    		 , CNCDNT.TGRPN_ID
				  	    		 , VN_USER.USER_NM AS TGRPN_NM
				  	    		 , CNCDNT.BSRP_ID
				  	    		 , VN_USER.DEPT_ID AS TGRPN_DEPT_ID
				  	    		 , DEPT.DEPT_NM  AS TGRPN_DEPT_NM
				  	    		 , VN_USER.OFCPS_ID AS TGRPN_OFCPS_ID
				 				 , FNCCOMCODENM(VN_USER.OFCPS_ID, 'COM105') AS TGRPN_OFCPS_NM
				  	    	  FROM TN_SCHDL_BSRP_CNCDNT CNCDNT
				  	    	  	   INNER JOIN COMVNUSERMASTER VN_USER
				  	    	  	      ON CNCDNT.TGRPN_ID = VN_USER.ESNTL_ID
				  	    	  	    LEFT JOIN TN_CMMN_DEPT DEPT
				  	      			  ON VN_USER.DEPT_ID = DEPT.DEPT_ID
				  	    	 WHERE 1=1
				  	    ) C
						  ON MBER_SCHDL.SCHDL_ID = C.BSRP_ID
				  	     AND MBER_SCHDL.TYPE_CD = 'bsrp'
				  	    LEFT JOIN VNVCATNINFO D
				  	      ON MBER_SCHDL.APLCNT_ID = D.ESNTL_ID
				  	     AND MBER_SCHDL.TYPE_CD = 'vcatn'
				 WHERE 1=1
		  ) T
		 WHERE 1=1
		 <if test="viewCd != null and viewCd == 'calendar'">
		 	ORDER BY (CASE WHEN TYPE_CD = 'brdt' THEN 0 WHEN TYPE_CD = 'bsrp' THEN 1 ELSE 2 END) ASC, TO_TIMESTAMP(START_DT, 'YYYYMMDDHH24MISS') DESC, OFCPS_ID ASC, APLCNT_NM ASC
		 </if>
		 <if test="viewCd != null and viewCd == 'list'">
		 	ORDER BY TO_TIMESTAMP(START_DT, 'YYYYMMDDHH24MISS') DESC, OFCPS_ID ASC, APLCNT_NM ASC
		 </if>
	</select>

	<!-- 일정관리 목록 건수 조회 -->
	<select id="selectSchdlListTotCnt" parameterType="SchdlVO" resultType="java.lang.Integer">
		SELECT COUNT(*)
		  FROM (
		  			SELECT 'bsrp' AS TYPE_CD
						 , '출장' AS TYPE_NM
						 , BSRP_ID AS SCHDL_ID
						 , APLCNT_ID
						 , BSRP_CN AS CONTENT
						 , BGNG_DT AS START_DT
						 , END_DT AS END_DT
						 , REG_DT
						 , RGTR_ID
						 , MDFCN_DT
						 , MDFR_ID
						 , BSRP_TTL
						 , BSRP_PLACE_NM
						 , NULL AS VCATN_SE
					  FROM TN_SCHDL_BSRP
					 WHERE 1=1
					 UNION ALL
					SELECT 'vcatn' AS TYPE_CD
						 , '휴가' AS TYPE_NM
						 , VCATN_ID AS SCHDL_ID
						 , APLCNT_ID
						 , VCATN_CN AS CONTENT
						 , BGNG_YMD AS START_DT
						 , END_YMD AS END_DT
						 , REG_DT
						 , RGTR_ID
						 , MDFCN_DT
						 , MDFR_ID
						 , NULL AS BSRP_TTL
						 , NULL AS BSRP_PLACE_NM
						 , VCATN_SE
					  FROM TN_SCHDL_VCATN
					 WHERE 1=1
					 <if test="viewCd != null and viewCd == 'calendar'">
					 	UNION ALL
					   SELECT 'brdt' AS TYPE_CD
						 	, '생일' AS TYPE_NM
						 	, USER_ID AS SCHDL_ID
						 	, ESNTL_ID AS APLCNT_ID
						 	, '생일' AS CONTENT
						 	, CASE WHEN BRDT IS NULL
						 		   THEN NULL
								   WHEN SUBSTRING(BRDT,5,8) = '0229' AND ((CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 4 != 0 OR CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 100 = 0)) AND CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 400 != 0
								   THEN NULL
								   ELSE CONCAT(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY'), SUBSTRING(BRDT,5,8))
							  END AS START_DT
						    , CASE WHEN BRDT IS NULL
						 		   THEN NULL
								   WHEN SUBSTRING(BRDT,5,8) = '0229' AND ((CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 4 != 0 OR CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 100 = 0)) AND CAST(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY') AS INTEGER) % 400 != 0
								   THEN NULL
								   ELSE CONCAT(TO_CHAR(TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS'), 'YYYY'), SUBSTRING(BRDT,5,8))
							  END AS END_DT
						    , NULL AS REG_DT
							, NULL AS RGTR_ID
							, NULL AS MDFCN_DT
							, NULL AS MDFR_ID
							, NULL AS BSRP_TTL
							, NULL AS BSRP_PLACE_NM
							, NULL AS VCATN_SE
					 	 FROM COMVNUSERMASTER
						WHERE 1=1
					 </if>
			   ) UNIT
		  	   INNER JOIN COMVNUSERMASTER MBER
				  ON UNIT.APLCNT_ID = MBER.ESNTL_ID
		 WHERE 1=1
		<if test="typeCd != null and typeCd != ''">
			AND UNIT.TYPE_CD = #{typeCd}
		</if>
		<if test="deptId != null and deptId != ''">
			AND MBER.DEPT_ID = #{deptId}
		</if>
		<if test="aplcntNm != null and aplcntNm != ''">
			AND REPLACE(MBER.USER_NM, ' ', '') LIKE CONCAT('%', REPLACE(#{aplcntNm}, ' ', ''), '%')
		</if>
		<if test="startDt != null and startDt != '' and (endDt == null or endDt == '')">
			<![CDATA[
				AND TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS') <= TO_DATE(UNIT.START_DT, 'YYYYMMDDHH24MISS')
			]]>
		</if>
		<if test="(startDt == null or startDt == '') and endDt != null and endDt != ''">
			<![CDATA[
				AND TO_DATE(#{endDt}, 'YYYYMMDDHH24MISS') >= TO_DATE(UNIT.END_DT, 'YYYYMMDDHH24MISS')
			]]>
		</if>
		<if test="startDt != null and startDt != '' and endDt != null and endDt != ''">
			AND (
					(
						TO_DATE(UNIT.START_DT, 'YYYYMMDDHH24MISS') BETWEEN TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS') AND TO_DATE(#{endDt}, 'YYYYMMDDHH24MISS')
						OR
						TO_DATE(UNIT.END_DT, 'YYYYMMDDHH24MISS') BETWEEN TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS') AND TO_DATE(#{endDt}, 'YYYYMMDDHH24MISS')
					) OR (
						TO_DATE(#{startDt}, 'YYYYMMDDHH24MISS') BETWEEN TO_DATE(UNIT.START_DT, 'YYYYMMDDHH24MISS') AND TO_DATE(UNIT.END_DT, 'YYYYMMDDHH24MISS')
						OR
						TO_DATE(#{endDt}, 'YYYYMMDDHH24MISS') BETWEEN TO_DATE(UNIT.START_DT, 'YYYYMMDDHH24MISS') AND TO_DATE(UNIT.END_DT, 'YYYYMMDDHH24MISS')
					)
			)
		</if>
	</select>

	<!-- 부서 조회 -->
	<select id="selectDeptList" resultMap="mapDept">
		WITH RECURSIVE VIEW_CMMN_DEPT(DEPT_ID, DEPT_NM, UP_DEPT_ID, DEPT_SN, DEPTH, PATH, CYCLE) AS (
			SELECT A.DEPT_ID
				 , A.DEPT_NM
				 , A.UP_DEPT_ID
				 , A.DEPT_SN
				 , 1
				 , ARRAY[A.DEPT_ID::TEXT]
				 , FALSE
			  FROM TN_CMMN_DEPT A
			 WHERE 1 = 1
			   AND A.DEPT_ID = 'ROOT'
			 UNION  ALL
			SELECT B.DEPT_ID
				 , B.DEPT_NM
				 , B.UP_DEPT_ID
				 , B.DEPT_SN
				 , C.DEPTH + 1
				 , ARRAY_APPEND(C.PATH, B.DEPT_ID::TEXT)
				 , B.DEPT_ID = ANY(C.PATH)
		      FROM TN_CMMN_DEPT B
		           INNER JOIN VIEW_CMMN_DEPT C
		              ON B.UP_DEPT_ID = C.DEPT_ID
		    WHERE 1 = 1
		      AND B.USE_YN = 'Y'
		      AND NOT CYCLE
		)
		SELECT DEPT_ID
			 , DEPT_NM
		  FROM VIEW_CMMN_DEPT
		 ORDER BY PATH
	</select>

	<!-- 일정(휴가, 출장) 등록 - 관리자 - 직원 검색 - 트리 조회 -->
	<select id="selectMbrTreeList" parameterType="SchdlVO" resultMap="mapDept">
		WITH RECURSIVE VIEW_CMMN_DEPT(DEPT_ID, DEPT_NM, UP_DEPT_ID, DEPT_SN, DEPTH, PATH, CYCLE) AS (
			SELECT A.DEPT_ID
				 , A.DEPT_NM
				 , A.UP_DEPT_ID
				 , A.DEPT_SN
				 , 1
				 , ARRAY[A.DEPT_ID::TEXT]
				 , FALSE
			  FROM TN_CMMN_DEPT A
			 WHERE 1 = 1
			   AND A.DEPT_ID = 'ROOT'
			 UNION  ALL
			SELECT B.DEPT_ID
				 , B.DEPT_NM
				 , B.UP_DEPT_ID
				 , B.DEPT_SN
				 , C.DEPTH + 1
				 , ARRAY_APPEND(C.PATH, B.DEPT_ID::TEXT)
				 , B.DEPT_ID = ANY(C.PATH)
		      FROM TN_CMMN_DEPT B
		           INNER JOIN VIEW_CMMN_DEPT C
		              ON B.UP_DEPT_ID = C.DEPT_ID
		    WHERE 1 = 1
		      AND B.USE_YN = 'Y'
		      AND NOT CYCLE
		), TREE_DATA AS (
			SELECT EMP.DEPT_ID
			     , EMP.DEPT_NM
			     , EMP.UP_DEPT_ID
			     , EMP.RMNDR_DAY_CNT
			  FROM (
			  		SELECT B.ESNTL_ID AS DEPT_ID
						 , B.USER_NM AS DEPT_NM
						 , C.DEPT_ID AS UP_DEPT_ID
						 , VCATN.RMNDR_DAY_CNT
					  FROM COMVNUSERMASTER B
					  	   INNER JOIN TN_CMMN_DEPT C
					  	  	  ON B.DEPT_ID = C.DEPT_ID
					  	  	 AND B.USER_ID != 'master'
					  	  	 AND B.USER_ID != 'USER'
					  	  	LEFT OUTER JOIN VNVCATNINFO VCATN
			     			  ON B.ESNTL_ID = VCATN.ESNTL_ID
					 ORDER BY B.OFCPS_ID
			  	 ) AS EMP
			 UNION ALL
			SELECT DEPT.DEPT_ID
			     , DEPT.DEPT_NM
			     , DEPT.UP_DEPT_ID
			     , 0 AS RMNDR_DAY_CNT
			  FROM (
			  			SELECT A.DEPT_ID
							 , A.DEPT_NM
							 , A.UP_DEPT_ID
						  FROM VIEW_CMMN_DEPT A
						 ORDER BY A.PATH
			     ) AS DEPT
		)
		SELECT DEPT_ID
		     , DEPT_NM
		     , UP_DEPT_ID
		     , (
				 	SELECT COUNT(F.DEPT_ID)
					  FROM TREE_DATA F
					 WHERE 1=1
					   AND F.UP_DEPT_ID = TREE_DATA.DEPT_ID
				 ) AS DROPPABLE
		     , RMNDR_DAY_CNT
		  FROM TREE_DATA
	</select>
</mapper>